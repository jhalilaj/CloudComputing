# Enable Load Balancer
spring.cloud.loadbalancer.enabled=true

# For Heroku deployment (use environment variables):
spring.cloud.discovery.client.simple.instances.appointments-service[0].uri=${APPOINTMENTS_SERVER_1:http://localhost:8081}
spring.cloud.discovery.client.simple.instances.appointments-service[1].uri=${APPOINTMENTS_SERVER_2:http://localhost:8082}

# Security configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI}


# PostgreSQL Configuration
spring.datasource.url=postgres://u6cdl118v1hij4:p51c3bf115222125b9dcc3a6d1dd2ec6ba9259cc8f1a62e1de25883b0611dc560@cd5gks8n4kb20g.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/d279i50moa20vt
spring.datasource.username=u6cdl118v1hij4
spring.datasource.password=p51c3bf115222125b9dcc3a6d1dd2ec6ba9259cc8f1a62e1de25883b0611dc560
spring.datasource.driver-class-name=org.postgresql.Driver
spring.main.web-application-type=reactive
# JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true