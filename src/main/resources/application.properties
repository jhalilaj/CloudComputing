# Enable Load Balancer
spring.cloud.loadbalancer.enabled=true

# Static service instances for LoadBalancer
spring.cloud.discovery.client.simple.instances.appointments-service[0].uri=${APPOINTMENTS_SERVER_1:http://localhost:8081}
spring.cloud.discovery.client.simple.instances.appointments-service[1].uri=${APPOINTMENTS_SERVER_2:http://localhost:8082}

# Explicitly enable Simple Discovery Client
spring.cloud.discovery.client.simple.instanced=true

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgres://ub90t2ucs8qp05:p1c164c30e87a9af6da9c0698f626e91ae2aefe2933a4baa9994f60085b6ea0bf@cfiiu1hn72og1g.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/d49go8bkj2ase
spring.datasource.username=ub90t2ucs8qp05
spring.datasource.password=p1c164c30e87a9af6da9c0698f626e91ae2aefe2933a4baa9994f60085b6ea0bf
spring.datasource.driver-class-name=org.postgresql.Driver
spring.main.web-application-type=reactive

# application.properties
spring.main.allow-bean-definition-overriding=true

